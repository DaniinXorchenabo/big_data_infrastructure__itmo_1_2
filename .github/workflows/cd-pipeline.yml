name: Continuous Delivery

on:
  workflow_dispatch:    # Позволяет запускать вручную
    inputs:
      deploy:
        description: 'Choose deploy environment'
        required: true
        default: 'staging'
  schedule:
    - cron: '0 0 1 * *'   # По расписанию
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed         # После завершения CI pipeline

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
  

    - name: Copy .env file
      run: |
          cp ./env/example.env ./env/.env
          echo "JUPYTER_TOKEN=${{ secrets.JUPYTER_TOKEN }}" >>  ./env/.env
          echo "AI_WEIGHTS_FILENAME=${{ secrets.AI_WEIGHTS_FILENAME }}" >>  ./env/.env
          echo "AI_WEIGHTS_REPO=${{ secrets.AI_WEIGHTS_REPO }}" >>  ./env/.env
          echo "AI_WEIGHTS_REPO_FILENAME=${{ secrets.AI_WEIGHTS_REPO_FILENAME }}" >>  ./env/.env
          
          echo "CONTAINER_PREFIX=unittests" >>  ./env/.env
          echo "DB_LOGIN=${{ secrets.DB_LOGIN }}" >>  ./env/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >>  ./env/.env
          echo "DB_HOST=hbase-rest" >>  ./env/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >>  ./env/.env

          cp ./env/.env ./env/unittests.env

    - name: Pull images from Docker Compose
      run: |
        docker-compose -f ./docker/docker-compose.yml  --env-file ./env/unittests.env  pull

    - name: Run tests
      run: |
        docker-compose -f ./docker/docker-compose.yml --env-file ./env/unittests.env  up  -d 
        docker exec -it dl_labs pytest -c ./tests/pytest.ini 
        TEST_EXIT_CODE=$(docker inspect dl_labs --format='{{.State.ExitCode}}')
        docker-compose -f ./docker/dev.docker-compose.yml -f ./docker/test.docker-compose.yml --env-file ./env/unittests.env down
        if [ "$TEST_EXIT_CODE" -ne 0 ]; then
              echo "Tests failed with exit code $TEST_EXIT_CODE"
              exit $TEST_EXIT_CODE
            else
              echo "Tests passed successfully."
        fi
    - name: Shutdown Docker Compose
      run: |
        docker-compose -f ./docker/docker-compose.yml --env-file ./env/unittests.env  down

